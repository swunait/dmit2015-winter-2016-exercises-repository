<?xml version="1.0" encoding="UTF-8"?>
<!-- JBoss, Home of Professional Open Source Copyright 2013, Red Hat, Inc. 
	and/or its affiliates, and individual contributors by the @authors tag. See 
	the copyright.txt in the distribution for a full listing of individual contributors. 
	Licensed under the Apache License, Version 2.0 (the "License"); you may not 
	use this file except in compliance with the License. You may obtain a copy 
	of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ca.nait.dmit</groupId>
	<artifactId>dmit2015-exercises-samwu</artifactId>
	<version>1.0</version>
	<packaging>war</packaging>
	<name>WildFly Quickstarts: dmit2015-exercises-samwu</name>
	<description>A starter Java EE 7 webapp project for use on JBoss WildFly / WildFly, generated from the jboss-javaee6-webapp archetype</description>

	<url>http://wildfly.org</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- JBoss dependency versions -->
		<version.wildfly.maven.plugin>5.1.3.Final</version.wildfly.maven.plugin>

		<!-- Define the version of the JBoss BOMs we want to import to specify 
			tested stacks. -->
		<version.jboss.bom>36.0.1.Final</version.jboss.bom>

		<!-- other plugin versions -->
		<version.compiler.plugin>3.14.0</version.compiler.plugin>
		<version.surefire.plugin>3.5.3</version.surefire.plugin>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>21</maven.compiler.target>
		<maven.compiler.source>21</maven.compiler.source>
	</properties>


	<dependencyManagement>
		<dependencies>
<!--			&lt;!&ndash; JBoss distributes a complete set of Java EE 7 APIs including a Bill -->
<!--				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) -->
<!--				of artifacts. We use this here so that we always get the correct versions -->
<!--				of artifacts. Here we use the jboss-javaee-7.0-with-tools stack (you can -->
<!--				read this as the JBoss stack of the Java EE 7 APIs, with some extras tools -->
<!--				for your project, such as Arquillian for testing) and the jboss-javaee-7.0-with-hibernate -->
<!--				stack you can read this as the JBoss stack of the Java EE 7 APIs, with extras -->
<!--				from the Hibernate family of projects) &ndash;&gt;-->
<!--			<dependency>-->
<!--				<groupId>org.wildfly.bom</groupId>-->
<!--				<artifactId>jboss-javaee-7.0-with-tools</artifactId>-->
<!--				<version>${version.jboss.bom}</version>-->
<!--				<type>pom</type>-->
<!--				<scope>import</scope>-->
<!--			</dependency>-->
<!--			<dependency>-->
<!--				<groupId>org.wildfly.bom</groupId>-->
<!--				<artifactId>jboss-javaee-7.0-with-hibernate</artifactId>-->
<!--				<version>${version.jboss.bom}</version>-->
<!--				<type>pom</type>-->
<!--				<scope>import</scope>-->
<!--			</dependency>-->
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>5.13.1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/jakarta.platform/jakarta.jakartaee-web-api -->
		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-web-api</artifactId>
			<version>10.0.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>15.0.4</version>
			<classifier>jakarta</classifier>
		</dependency>
		<dependency>
			<groupId>software.xdev</groupId>
			<artifactId>chartjs-java-model</artifactId>
			<version>2.8.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>6.5.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>6.5.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-crypto</artifactId>
			<version>6.5.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-ldap</artifactId>
			<version>6.5.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>6.2.8</version>
		</dependency>

		<!-- JUnit 5 is for Unit Testing -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<!--JUnit Parameterized Test -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<!--JUnit Test Suite -->
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite-engine</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<!-- Maven will append the version to the finalName (which is the name 
			given to the generated war, and hence the context root) -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.4.0</version>
			</plugin>

			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<configuration>
					<discover-provisioning-info>
						<suggest>true</suggest>
						<version>36.0.1.Final</version>
						<!--                        <failsOnError>false</failsOnError>-->
						<verbose>true</verbose>
					</discover-provisioning-info>

					<!-- To attach a debugger to the running server from IntelliJ IDEA
                            1. From the main menu, choose `Run | Attach to Process`
                            2. IntelliJ IDEA will show the list of running local processes. Select the process with the `jboss-module.jar` name to attach to.
                        -->
					<debug>true</debug>
					<debugPort>8797</debugPort>
					<debugSuspend>false</debugSuspend>

				</configuration>

				<!-- Provision the WildFly server and deploy your application to the WildFly server. -->
				<executions>
					<execution>
						<goals>
							<goal>package</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>
